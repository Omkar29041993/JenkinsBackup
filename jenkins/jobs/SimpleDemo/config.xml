<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.21">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.2.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.2.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>ENV</name>
          <description>Chose follwoing environment</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>environment1</string>
              <string>environment2</string>
              <string>environment3</string>
              <string>environment4</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>Para</name>
          <description>Chose the string parameter</description>
          <defaultValue>Omkar Tirodkar</defaultValue>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.53">
    <script>pipeline {
    agent none 
    stages {
        stage(&apos;Example Build&apos;) {
            agent { node &apos;master&apos; } 
            steps {
                echo &quot;Master Node&quot;
                echo &quot;Environment Variable:$ENV&quot;
                echo &quot;Parameter Variable:$Para&quot;
            }
        }
        stage(&apos;Example Test&apos;) {
            agent { node &apos;slave&apos; } 
            steps {
                echo &quot;Slave Node&quot;
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>